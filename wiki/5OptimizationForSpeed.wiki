#labels Featured,Phase-Deploy
#There some things you can do to speed up Hyphenator

= How fast is Hyphenator? =

There is no answer to this question despite of: “it depends on a lot of parameteres”.
For most tasks Hyphenator is fast enough, but speed is cool and there things you can do to make Hyphenator faster and thus even cooler ;-)

== Execution speed ==
I'm permanently tweaking the code for execution speed. If there's a nanosecond to save, I want to save it!
Nevertheless the're differences in execution speed depending on the browser you use. In general a more recent version is faster.

*What an webauthor can do:*
The depth of the DOM-Tree has a big impact on the speed of Hyphenator. It takes a quite bit of time hyphenate a document with <body class="hyphenate"> and highly nested code (layout tables, lots of divs in divs in divs...). But its quite fast to just hyphenate all p-Elements.

Conclusion: Write clean standard-conform code and set class="hyphenate" to the leaves instead to the roots or branches.

== Loading speed ==
The script itself isn't that big (Hyphenator.js: ca. 16KB). What really takes time to load are the pattern files (192Kb for the new german patterns, 68 KB for english).

With a Javascript-packer (http://dean.edwards.name/packer/) Hyphenator.js could be cut down to 50% of its size. But the data structure of the patterns is already highly optimized for space (and speed). There's almost nothing to save.

*What an webauthor can do:*
  * *Serve the files zipped:* Depending on your server you may serve the files zipped. Current browsers can easily deal with zipped packages. Zipping typically saves more than 50%.
  * *Preload patterns:* Normally only one language is used on a page. So the mechanism to dynamically load patterns is rather superfluous. To preload patterns write e.g.
  {{{
<script src="http://hyphenator.googlecode.com/svn/trunk/patterns/en.js" type="text/javascript"></script>
}}}
  after the script block wich loads Hyphenator.js but before the script is invoked. The [http://hyphenator.googlecode.com/svn/trunk/WorkingExample.html working sample] may then look like this:
  {{{
<script src="http://hyphenator.googlecode.com/svn/trunk/Hyphenator.js" type="text/javascript"></script>
<script src="http://hyphenator.googlecode.com/svn/trunk/patterns/en.js" type="text/javascript"></script>
<script type="text/javascript">
  window.onload=function() {
    Hyphenator.hyphenateDocument();
  }
</script>
}}}
  Preloaded pattern files won't be loaded again!
  If you want to prevent Hyphentor from remote loading patterns, you can explicitly turn of this functionality:
  {{{
Hyphenator.setRemoteLoading(false);
  }}}
  * *Cache pattern files:* If your site often uses Hyphenator.js you may think about caching pattern files in the browsers cache by sending an appropriate HTTP-Header.