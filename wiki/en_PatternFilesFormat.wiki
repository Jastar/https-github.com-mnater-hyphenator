#summary Description of the format used in pattern files
#labels Phase-Deploy

_work in progress_

= About Pattern Files =
Each language has its own rules for hyphenation, so Hyphenator.js has to load a language-specific file containing the patterns and some meta information. This files are called pattern files.

Their format and meta information is described in this article.


== Loading of pattern files ==
By default Hyphenator.js searches the html-file for information, witch language to use to hyphenate the text. It then loads the pattern files asynchronously in the background. As soon as the patterns are loaded Hyphenator.js hyphenates the texts.

Instead of automatically loading the patterns [http://code.google.com/p/hyphenator/wiki/en_PublicAPI#property_remoteloading you can load them manually].

== Encoding and Naming ==
If you decide to create your own pattern file (e.g. to add a new language) you should use the [http://hyphenator.googlecode.com/svn/trunk/compressor.html "compressor"] that comes with the Hyphenator.js package.

Please make sure to save the file with the following standards:
  * encoding: utf8
  * no BOM
  * filename: `<language-tag>.js` (`<language-tag>` according to [http://en.wikipedia.org/wiki/BCP_47 BCP 47])

== General structure of the pattern files ==
The pattern files should only contain a Javascript-object and Javascript-comments. When loaded this script is executed and the informations are added to the Hyphenator-object that encloses the whole script.

<code>
/* Comments */
Hyphenator.languages['ex-mpl'] = {
	leftmin : 2,
	rightmin : 2,
	specialChars : "äöü",
	patterns : {
		…
	}
};
</code>

=== Mandatory fields ===
There are four mandatory fields in the object:

||`leftmin`||int number|| number of characters (at the beginning of the word) to remain on the line||
||`rightmin`||int number|| number of characters (at the end of the word) to go on the new line||
||`specialChars`||string|| all chars that are used in the patterns and are not part of ASCII char set||
||`patterns`||object|| the patterns as described below||

=== optional fields ===
Additionally to the mandatory fields there are two optional fields in the object:
||`charSubstitution`||object|| characters to be replaced for hyphenation (see below)||
||`exceptions`||string CSV|| exceptions for the language (see: http://code.google.com/p/hyphenator/wiki/en_DealingWithInaccurateHyphenation#Language_wide_exceptions)||

==== charSubstitution ===